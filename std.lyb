// Standard VixtLang library
// @author GiaKhanhVN
// version 0.1

$Imports("java.util.Arrays","java.util.Random")

public static class %lname% {
 public static final String VERSION = "ALPHA-0.1-B0155";
	public static int random(int min, int max) {
		if (min < 0) min = 0;
		if (max < 0) max = 0;
		return new Random().nextInt((max - min) + 1) + min;
	}
	static String xau_random(int targetStringLength) {
		int leftLimit = 97;
		int rightLimit = 122;
		var random = new Random();
		var generatedString = random.ints(leftLimit, rightLimit + 1)
			.limit(targetStringLength)
			.collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)
			.toString();
		return generatedString;
	} 
	public static <T> void sapxep(T[] t) {
		Arrays.sort(t);
	}
	public static <T> void xep(T[] t) {
		sapxep(t);
	}
	public static <T> void xao_mang(T[] ar) {
		xao(ar);
	}

	public static <T> void xao(T[] ar) {
		Random rnd = new Random();
		for (int i = ar.length - 1; i > 0; i--) {
			int index = rnd.nextInt(i + 1);
			T a = ar[index];
			ar[index] = ar[i];
			ar[i] = a;
		}
	}
	public static double thanh_stp(String st) {
		try {
			return Double.parseDouble(st);
		} catch (Exception e) {
			return -1d;
		}
	}
	public static int thanh_stn(String st) {
		try {
			return Integer.parseInt(st);
		} catch (Exception e) {
			return -1;
		}
	}
	public static long thanh_stnl(String st) {
		try {
			return Long.parseLong(st);
		} catch (Exception e) {
			return -1;
		}
	}
	public static long[] rangeLong(int fr, int to) {
		if (fr < 0 || to < 0)
			return new long[0];
		if (fr > to) {
			int cfr = fr;
			int cto = to;
			to = cfr;
			fr = cto;
		}
		long[] ret = new long[(to - fr) + 1];
		int index = 0;
		for (int i = fr; i < to + 1; i++) {
			ret[index] = i;
			index++;
		}
		return ret;
	}
}